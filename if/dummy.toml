### ONLY FOR TESTING ###

# name of the dataset
name = "DUMMY"

[graph]
file = "../../datasets/dummy/context.nt.gz"

train = "../../datasets/dummy/train.nt.gz"
valid = "../../datasets/dummy/valid.nt.gz"
test = "../../datasets/dummy/test.nt.gz"

[graph.structural]
include_inverse_properties = true
exclude_properties = []  # use empty list to include all
separate_literals = true

[[graph.features]]
datatype = 'xsd.numeric'
include = false
share_weights = false 

[[graph.features]]
datatype = 'xsd.gYear'
include = false
share_weights = false 

[[graph.features]]
datatype = 'xsd.date'
include = false
share_weights = false 

[[graph.features]]
datatype = 'xsd.boolean'
include = false
share_weights = false 

[[graph.features]]
datatype = 'xsd.string'
include = false
passes_per_batch = 1
share_weights = false
remove_outliers = false

[[graph.features]]
datatype = 'blob.image'
include = false
passes_per_batch = 1
share_weights = false
remove_outliers = false

[[graph.features]]
datatype = 'ogc.wktLiteral'
include = false
passes_per_batch = 1
share_weights = false
remove_outliers = false

[task]
# node classification
type = 'node classification'
instance_type = ''
target_property = ''
target_property_inv = ''
target_classes = []
seed = -1  # use < 0 for random
gpu = false

[model]
epoch = 50
learning_rate = 0.01
patience = 7  # < 0 to disable
mini_batch = false
num_bases = 0
p_dropout = 0.0
l2norm = 0.0
bias = false

[[model.layers]]
type = 'mrgcn'
hidden_nodes = 16

[[model.layers]]
type = 'mrgcn'

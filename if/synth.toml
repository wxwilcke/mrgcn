### ONLY FOR TESTING ###

# name of the dataset
name = "SYNTH"

[graph]
context = "../../datasets/synth/context.nt.gz"

train = "../../datasets/synth/train.nt.gz"
valid = "../../datasets/synth/valid.nt.gz"
test = "../../datasets/synth/test.nt.gz"

[graph.structural]
include_inverse_properties = true
exclude_properties = []  # use empty list to include all
separate_literals = false

[[graph.features]]
datatype = 'xsd.numeric'
include = true
share_weights = true

[[graph.features]]
datatype = 'xsd.gYear'
include = true
share_weights = true 

[[graph.features]]
datatype = 'xsd.date'
include = true
share_weights = true 

[[graph.features]]
datatype = 'xsd.boolean'
include = true
share_weights = true 

[[graph.features]]
datatype = 'xsd.string'
include = true
num_batches = 16
share_weights = true
trim_outliers = false
remove_outliers = false
embedding_dim = 16

[[graph.features]]
datatype = 'blob.image'
include = true
num_batches = 64
share_weights = true
embedding_dim = 128

[[graph.features]]
datatype = 'ogc.wktLiteral'
include = true
num_batches = 16
share_weights = true
trim_outliers = true
remove_outliers = false
embedding_dim = 16

[task]
# node classification
type = 'node classification'
instance_type = ''
target_property = ''
target_property_inv = ''
target_classes = []
seed = -1  # use < 0 for random
gpu = false

[model]
epoch = 100
learning_rate = 0.01
patience = 7  # < 0 to disable
num_bases = 0
p_dropout = 0.0
l2norm = 0.0
bias = false

[[model.layers]]
type = 'mrgcn'
hidden_nodes = 16

[[model.layers]]
type = 'mrgcn'
